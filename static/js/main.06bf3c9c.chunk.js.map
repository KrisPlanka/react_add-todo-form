{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","userId","cn","CardActionArea","Paper","elevation","CardContent","TodoList","todos","map","preparedTodos","usersFromServer","find","App","useState","setTodos","setTitle","setUserId","isTitleError","setIsTitleError","isUserNameError","setIsUserNameError","onSubmit","event","preventDefault","trim","userName","userToAdd","current","todoItem","Math","max","FormControl","sx","width","TextField","fullWidth","label","type","placeholder","value","onChange","currentTarget","FormHelperText","InputLabel","Select","labelId","target","MenuItem","Button","variant","color","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06bf3c9c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\n\nimport { CardActionArea, CardContent, Paper } from '@mui/material';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n\n      <CardActionArea>\n        <Paper elevation={8}>\n          <CardContent>\n            <h2 className=\"TodoInfo__title\">\n              {title}\n            </h2>\n\n            {user && (\n              <UserInfo key={userId} user={user} />\n            )}\n          </CardContent>\n        </Paper>\n      </CardActionArea>\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from '@mui/material';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserName(userName: string): User | null {\n  const foundUser = usersFromServer.find(user => user.name === userName);\n\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserNameError, setIsUserNameError] = useState(false);\n\n  const handleChangeTitile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setIsTitleError(false);\n  };\n\n  const handleChangeUser = (event: SelectChangeEvent) => {\n    setUserId(event.target.value);\n    setIsUserNameError(false);\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsTitleError(!title.trim());\n    setIsUserNameError(!userId);\n\n    if (title.trim() === '' || !userId) {\n      return;\n    }\n\n    const userToAdd = getUserName(userId);\n\n    setTodos(current => {\n      const maxTodoId = Math.max(...current.map(todo => todo.id));\n\n      const todoItem = {\n        id: maxTodoId + 1,\n        title,\n        completed: false,\n        userId: userToAdd ? userToAdd.id : null,\n        user: userToAdd,\n      };\n\n      return [\n        ...current,\n        todoItem,\n      ];\n    });\n\n    setTitle('');\n    setUserId('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form\n        className=\"App__form\"\n        onSubmit={handleSubmit}\n      >\n        <FormControl sx={{ width: '40ch' }}>\n          <div className=\"field\">\n            <TextField\n              fullWidth\n              label=\"Enter a title\"\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitile}\n              className=\"title\"\n            />\n            {isTitleError && (\n              <FormHelperText\n                className=\"error\"\n              >\n                Please enter a title\n              </FormHelperText>\n            )}\n          </div>\n          <div className=\"field\">\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">\n                User\n              </InputLabel>\n              <Select\n                labelId=\"select-label\"\n                label=\"User\"\n                id=\"userName\"\n                data-cy=\"userSelect\"\n                value={userId}\n                onChange={handleChangeUser}\n                className=\"userName\"\n                fullWidth\n              >\n                {usersFromServer.map(user => (\n                  <MenuItem value={user.name} key={user.id}>\n                    {user.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {isUserNameError && (\n              <FormHelperText\n                className=\"error\"\n              >\n                Please choose a user\n              </FormHelperText>\n            )}\n          </div>\n        </FormControl>\n\n        <Button\n          className=\"button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          variant=\"contained\"\n          color=\"success\"\n          size=\"large\"\n        >\n          Add\n        </Button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport './style.scss';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}