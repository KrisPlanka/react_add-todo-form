{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","userId","cn","TodoList","todos","map","preparedTodos","usersFromServer","find","App","useState","setTodos","setTitle","userName","setUserName","isTitleError","setIsTitleError","isUserNameError","setIsUserNameError","action","method","onSubmit","event","preventDefault","trim","userToAdd","getUserName","current","maxTodoId","Math","max","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5ce566f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo key={userId} user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserName(userName: string): User | null {\n  const foundUser = usersFromServer.find(user => user.name === userName);\n\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserNameError, setIsUserNameError] = useState(false);\n\n  const handleTitile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setIsTitleError(false);\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserName(event.currentTarget.value);\n    setIsUserNameError(false);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsTitleError(!title.trim());\n    setIsUserNameError(!userName);\n\n    if (title.trim() === '' || !userName) {\n      return;\n    }\n\n    const userToAdd = getUserName(userName);\n\n    setTodos(current => {\n      const maxTodoId = Math.max(...current.map(todo => todo.id));\n\n      return [\n        ...current,\n        {\n          id: maxTodoId + 1,\n          title,\n          completed: false,\n          userId: userToAdd ? userToAdd.id : null,\n          user: userToAdd,\n        },\n      ];\n    });\n\n    setTitle('');\n    setUserName('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleChange}\n      >\n        <div className=\"field\">\n          <label className=\"label\">\n            {'Title: '}\n            <input\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitile}\n              className=\"title\"\n            />\n            {isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              id=\"userName\"\n              name=\"User\"\n              data-cy=\"userSelect\"\n              value={userName}\n              onChange={handleUserName}\n              className=\"userName\"\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.name} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n\n            {isUserNameError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}